import{_ as s,c as a,o as n,b as l}from"./app.c299c823.js";const C=JSON.parse('{"title":"如何从 MYSQL 中读取超过内存容量的数据","description":"","frontmatter":{},"headers":[],"relativePath":"doc/rdb/querybigdata.md","lastUpdated":1678419541000}'),p={name:"doc/rdb/querybigdata.md"},o=l(`<h1 id="如何从-mysql-中读取超过内存容量的数据" tabindex="-1">如何从 MYSQL 中读取超过内存容量的数据 <a class="header-anchor" href="#如何从-mysql-中读取超过内存容量的数据" aria-hidden="true">#</a></h1><ol><li>分页查询(本文暂不讨论分页情况)</li><li>流式查询 <ul><li>流式查询指的是查询成功后不是返回一个集合而是返回一个迭代器，应用每次从迭代器取一条查询结果。流式查询的好处是能够降低内存使用。</li></ul></li></ol><h2 id="流式查询的实现方式" tabindex="-1">流式查询的实现方式 <a class="header-anchor" href="#流式查询的实现方式" aria-hidden="true">#</a></h2><ul><li>使用JDBC原生接口，设置Statement对象的fetchSize为Integer.MIN_VALUE，返回一个ResultSet对象，然后遍历该对象获取每一行数据</li><li>使用MyBatis框架，设置resultType为Cursor，返回一个Cursor对象，然后遍历该对象获取每一行数据</li></ul><h3 id="流式查询原生jdbc实现" tabindex="-1">流式查询原生JDBC实现 <a class="header-anchor" href="#流式查询原生jdbc实现" aria-hidden="true">#</a></h3><p>使用JDBC原生接口进行流式查询的步骤如下:</p><ol><li><p>加载MYSQL驱动，使用DriverManager或DataSource获取连接对象</p></li><li><p>创建Statement对象，设置fetchSize为Integer.MIN_VALUE，表示每次从服务器获取一行数据</p></li><li><p>执行SQL语句，返回ResultSet对象</p></li><li><p>使用next方法遍历ResultSet对象，获取每一行数据</p></li><li><p>关闭ResultSet、Statement和Connection对象 注意：<strong>使用流式查询时，不能使用其他的Statement对象执行SQL语句，否则会导致ResultSet对象关闭</strong>。</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// import MysqlDataSource class</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">com</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">mysql</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">cj</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">jdbc</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">MysqlDataSource</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// create a MysqlDataSource object</span></span>
<span class="line"><span style="color:#C792EA;">MysqlDataSource</span><span style="color:#A6ACCD;"> dataSource </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">MysqlDataSource</span><span style="color:#89DDFF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// set database URL, username and password</span></span>
<span class="line"><span style="color:#A6ACCD;">dataSource</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setURL</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">jdbc:mysql://localhost:3306/testdb</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">dataSource</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setUser</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">root</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">dataSource</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setPassword</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">password</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// get a connection object</span></span>
<span class="line"><span style="color:#C792EA;">Connection</span><span style="color:#A6ACCD;"> conn </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> dataSource</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getConnection</span><span style="color:#89DDFF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// set connection as read-only and forward-only</span></span>
<span class="line"><span style="color:#A6ACCD;">conn</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setReadOnly</span><span style="color:#89DDFF;">(true);</span></span>
<span class="line"><span style="color:#A6ACCD;">conn</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setAutoCommit</span><span style="color:#89DDFF;">(false);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// create a statement object</span></span>
<span class="line"><span style="color:#C792EA;">Statement</span><span style="color:#A6ACCD;"> stmt </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> conn</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createStatement</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ResultSet</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">TYPE_FORWARD_ONLY</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> ResultSet</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">CONCUR_READ_ONLY</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// set fetch size to Integer.MIN_VALUE to enable streaming query</span></span>
<span class="line"><span style="color:#A6ACCD;">stmt</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setFetchSize</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">Integer</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">MIN_VALUE</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// execute a query that returns a large result set</span></span>
<span class="line"><span style="color:#C792EA;">ResultSet</span><span style="color:#A6ACCD;"> rs </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> stmt</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">executeQuery</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">SELECT * FROM large_table</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// process the result set row by row</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">rs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">next</span><span style="color:#89DDFF;">())</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// do something with each row</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// close resources</span></span>
<span class="line"><span style="color:#A6ACCD;">rs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">close</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">stmt</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">close</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">conn</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">close</span><span style="color:#89DDFF;">();</span></span>
<span class="line"></span></code></pre></div><ul><li>其中<code>ResultSet.TYPE_FORWARD_ONLY</code> 和 <code>ResultSet.CONCUR_READ_ONLY</code> 是创建Statement对象时指定的两个参数，分别表示结果集的类型和并发性。 <ul><li>结果集的类型决定了可以如何遍历结果集中的行。<strong>ResultSet.TYPE_FORWARD_ONLY 表示只能向前移动游标，不能向后移动或跳转到任意位置。这是默认的类型，也是最高效的类型。</strong></li><li>结果集的并发性决定了可以如何更新结果集中的数据。<strong>ResultSet.CONCUR_READ_ONLY 表示不能用结果集来更新数据，只能读取数据。这是默认的并发性，也是最安全的并发性。</strong></li></ul></li></ul></li></ol><h3 id="流式查询mybatis实现" tabindex="-1">流式查询Mybatis实现 <a class="header-anchor" href="#流式查询mybatis实现" aria-hidden="true">#</a></h3><ol><li><p>mapper中定义一个查询方法，并添加@Options和@ResultType注解</p></li><li><p>结果集的类型为ResultSetType.FORWARD_ONLY，抓取大小为Integer.MIN_VALUE</p></li><li><p>在service中调用这个方法，并传入一个ResultHandler对象，用来处理每一行数据。</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// mapper interface</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">interface</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">XxxMapper</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Select</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">select * from xxx order by xx desc</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Options</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">resultSetType</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> ResultSetType</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">FORWARD_ONLY</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">fetchSize</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Integer</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">MIN_VALUE</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">ResultType</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">XxxObject</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">class</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">queryStreamResult</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">ResultHandler</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">XxxObject</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">handler</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// service class</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">XxxService</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// inject mapper</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">XxxMapper</span><span style="color:#A6ACCD;"> xxxMapper</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// query method</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">query</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// create a result handler</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">ResultHandler</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">XxxObject</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> handler </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">ResultHandler</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">XxxObject</span><span style="color:#89DDFF;">&gt;()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">handleResult</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">ResultContext</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">?</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">extends</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">XxxObject</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">resultContext</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">                </span><span style="color:#676E95;font-style:italic;">// get current row data</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#C792EA;">XxxObject</span><span style="color:#A6ACCD;"> obj </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> resultContext</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getResultObject</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#89DDFF;">                </span><span style="color:#676E95;font-style:italic;">// do something with obj</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// call mapper method with handler</span></span>
<span class="line"><span style="color:#A6ACCD;">        xxxMapper</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">queryStreamResult</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">handler</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div></li></ol>`,9),e=[o];function t(c,r,y,D,F,A){return n(),a("div",null,e)}const u=s(p,[["render",t]]);export{C as __pageData,u as default};
